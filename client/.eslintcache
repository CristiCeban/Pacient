[{"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\index.tsx":"1","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\auth\\AuthScreen.tsx":"2","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\App.tsx":"3","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\redux\\store.ts":"4","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\main\\Main.tsx":"5","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\navigation\\Navigation.tsx":"6","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\auth\\RegisterScreen.tsx":"7","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\pageNotFound\\PageNotFound.tsx":"8","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\redux\\reducers\\index.ts":"9","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\redux\\actions\\authActions.ts":"10","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\config\\Config.ts":"11","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\redux\\actions\\generalActions.tsx":"12","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\components\\navBar\\NavBar.tsx":"13","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\patient\\Patient.tsx":"14","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\recipe\\Recipe.tsx":"15","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\treatment\\Treatment.tsx":"16","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\diagnostic\\Diagnostic.tsx":"17","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\config\\Colors.ts":"18","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\components\\table\\TableIcons.tsx":"19","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\redux\\reducers\\authReducers.ts":"20","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\Pills\\Pills.tsx":"21","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\services\\api.ts":"22"},{"size":220,"mtime":1608547960221,"results":"23","hashOfConfig":"24"},{"size":7654,"mtime":1608561208723,"results":"25","hashOfConfig":"24"},{"size":549,"mtime":1608555667102,"results":"26","hashOfConfig":"24"},{"size":804,"mtime":1608551556707,"results":"27","hashOfConfig":"24"},{"size":7029,"mtime":1609077499574,"results":"28","hashOfConfig":"24"},{"size":3740,"mtime":1609077339883,"results":"29","hashOfConfig":"24"},{"size":10837,"mtime":1608561208730,"results":"30","hashOfConfig":"24"},{"size":144,"mtime":1608555341940,"results":"31","hashOfConfig":"24"},{"size":600,"mtime":1608551385895,"results":"32","hashOfConfig":"24"},{"size":2327,"mtime":1609784227343,"results":"33","hashOfConfig":"24"},{"size":187,"mtime":1608549329557,"results":"34","hashOfConfig":"24"},{"size":360,"mtime":1608561517491,"results":"35","hashOfConfig":"24"},{"size":4671,"mtime":1608721255942,"results":"36","hashOfConfig":"24"},{"size":9537,"mtime":1609076735464,"results":"37","hashOfConfig":"24"},{"size":8616,"mtime":1609077574718,"results":"38","hashOfConfig":"24"},{"size":10581,"mtime":1608815711006,"results":"39","hashOfConfig":"24"},{"size":6778,"mtime":1609077601770,"results":"40","hashOfConfig":"24"},{"size":83,"mtime":1608549349125,"results":"41","hashOfConfig":"24"},{"size":2281,"mtime":1608636843269,"results":"42","hashOfConfig":"24"},{"size":1628,"mtime":1608551097742,"results":"43","hashOfConfig":"24"},{"size":6702,"mtime":1609790082997,"results":"44","hashOfConfig":"24"},{"size":1931,"mtime":1608745884497,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1xfg9df",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\index.tsx",[],["95","96"],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\auth\\AuthScreen.tsx",["97","98","99"],"import React, {useRef, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// @ts-ignore\r\nimport { Bounce } from 'react-activity';\r\nimport 'react-activity/dist/react-activity.css';\r\nimport * as yup from 'yup'\r\nimport {Formik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {onLogin} from \"../../redux/actions/authActions\";\r\n// import {onLogin} from \"../../redux/actions/authActions\";\r\n// import {ApplicationState} from \"../../redux/reducers\";\r\n\r\nconst initFormValue = {\r\n    username: '',\r\n    password: '',\r\n}\r\nconst validationSchema = yup.object().shape({\r\n    username: yup.string()\r\n        .label('username')\r\n        .email('Enter a valid email')\r\n        .required('Please enter an email'),\r\n    password: yup.string()\r\n        .label('Password')\r\n        .required('Please enter your password')\r\n        .min(4, 'Password must have at least 4 characters '),\r\n});\r\n\r\n\r\nconst AuthScreen = () =>{\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    // const {inProgress,error} = useSelector((state: ApplicationState) => state.authReducer);\r\n    const formikRef = useRef(null);\r\n\r\n\r\n    const onSignIn= (values : any) => {\r\n        dispatch(onLogin(values))\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Formik\r\n                innerRef={formikRef}\r\n                validationSchema={validationSchema}\r\n                initialValues={initFormValue}\r\n                onSubmit={(values) => onSignIn(values)}\r\n            >\r\n                {({\r\n                      values,\r\n                      touched,\r\n                      errors,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit\r\n                  }) => (\r\n                    <>\r\n                        <CssBaseline />\r\n                        <div className={classes.paper}>\r\n                            <Avatar className={classes.avatar}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Sign in\r\n                            </Typography>\r\n                            <form className={classes.form} onSubmit={handleSubmit}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"username\"\r\n                                    autoComplete=\"email\"\r\n                                    autoFocus\r\n                                    value={values.username}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    helperText={(errors.username && touched.username) && errors.username}\r\n                                    FormHelperTextProps={{\r\n                                        className : classes.helperText\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    value={values.password}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    helperText={(errors.password&&touched.password) && errors.password}\r\n                                    FormHelperTextProps={{\r\n                                        className : classes.helperText\r\n                                    }}\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                    label=\"Remember me\"\r\n                                />\r\n                                <Button\r\n                                    type='submit'\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    <div style={{minHeight:25}}>\r\n                                        {\r\n                                            // inProgress ?\r\n                                            // <Bounce style={{marginTop:25}}/>\r\n                                            // :\r\n                                            'Sign in'\r\n                                        }\r\n                                    </div>\r\n                                </Button>\r\n                                {/*{error ?*/}\r\n                                {/*    <p className={classes.helperText} style={{paddingLeft:15,fontSize:12,marginTop:-5}}>{error}</p>*/}\r\n                                {/*    :null}*/}\r\n                                <Grid container>\r\n                                    <Grid item xs>\r\n                                        <Link href=\"#\" variant=\"body2\">\r\n                                            Forgot password?\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Link href=\"/signUp\" variant=\"body2\">\r\n                                            {\"Don't have an account? Sign Up\"}\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        </div>\r\n                        <Box mt={8}/>\r\n                    </>\r\n                )}\r\n            </Formik>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme : any) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    helperText : {\r\n        color : '#a20606'\r\n    },\r\n}));\r\n\r\nexport default AuthScreen\r\n","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\App.tsx",[],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\redux\\store.ts",[],["100","101"],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\main\\Main.tsx",["102","103","104","105","106","107","108","109","110","111"],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\navigation\\Navigation.tsx",[],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\auth\\RegisterScreen.tsx",[],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\pageNotFound\\PageNotFound.tsx",[],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\redux\\reducers\\index.ts",[],["112","113"],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\redux\\actions\\authActions.ts",[],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\config\\Config.ts",[],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\redux\\actions\\generalActions.tsx",[],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\components\\navBar\\NavBar.tsx",["114"],"import React from 'react'\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, IconButton, Link, Toolbar, Typography} from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDiagnoses,faHome,faNotesMedical,faHospitalUser,faPills,faSignOutAlt,faProcedures } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useLocation} from \"react-router\";\r\nimport {onLogout} from \"../../redux/actions/generalActions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nenum routerEnum {\r\n    main = '/',\r\n    patient = '/patient',\r\n    diagnostic = '/diagnostic',\r\n    treatment = '/treatment',\r\n    recipe = '/recipe',\r\n    pills = '/pills',\r\n}\r\n\r\nconst NavBar = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const {pathname} = location;\r\n\r\n    const logout = async () => {\r\n        dispatch(onLogout());\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar position={\"fixed\"}\r\n                    style={{backgroundColor:'#bbbfbc'}}\r\n            >\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        <Link href={'/'} style={{color:'black'}}>\r\n                            Patients Management\r\n                        </Link>\r\n                    </Typography>\r\n\r\n                    <Link href={'/'}>\r\n                        <IconButton>\r\n                            <FontAwesomeIcon icon={faHome} className={pathname === routerEnum.main\r\n                                ? classes.selectedNavIcon\r\n                                :\r\n                                undefined}\r\n                            />\r\n                        </IconButton>\r\n                    </Link>\r\n\r\n                    <Link href={'/patient'}>\r\n                        <IconButton>\r\n                            <FontAwesomeIcon icon={faHospitalUser} className={pathname.includes(routerEnum.patient)\r\n                                ? classes.selectedNavIcon\r\n                                :\r\n                                undefined}\r\n                            />\r\n                        </IconButton>\r\n                    </Link>\r\n\r\n                    <Link href={'/diagnostic'}>\r\n                        <IconButton>\r\n                            <FontAwesomeIcon icon={faDiagnoses} className={pathname.includes(routerEnum.diagnostic)\r\n                                ? classes.selectedNavIcon\r\n                                :\r\n                                undefined}\r\n                            />\r\n                        </IconButton>\r\n                    </Link>\r\n\r\n                    <Link href={'/treatment'}>\r\n                        <IconButton>\r\n                            <FontAwesomeIcon icon={faProcedures} className={pathname.includes(routerEnum.treatment)\r\n                                ? classes.selectedNavIcon\r\n                                :\r\n                                undefined}\r\n                            />\r\n                        </IconButton>\r\n                    </Link>\r\n\r\n                    <Link href={'/recipe'}>\r\n                        <IconButton>\r\n                            <FontAwesomeIcon icon={faNotesMedical} className={pathname.includes(routerEnum.recipe)\r\n                                ? classes.selectedNavIcon\r\n                                :\r\n                                undefined}\r\n                            />\r\n                        </IconButton>\r\n                    </Link>\r\n\r\n                    <Link href={'/pills'}>\r\n                        <IconButton>\r\n                            <FontAwesomeIcon icon={faPills} className={pathname.includes(routerEnum.pills)\r\n                                ? classes.selectedNavIcon\r\n                                :\r\n                                undefined}\r\n                            />\r\n                        </IconButton>\r\n                    </Link>\r\n\r\n                    <IconButton onClick={logout}>\r\n                        <FontAwesomeIcon icon={faSignOutAlt}/>\r\n                    </IconButton>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n        color : 'black'\r\n    },\r\n    selectedNavIcon : {\r\n        color:'#a50101'\r\n    }\r\n}));\r\n\r\nexport default NavBar;\r\n","C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\patient\\Patient.tsx",["115","116","117","118","119"],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\recipe\\Recipe.tsx",["120","121","122","123","124","125"],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\treatment\\Treatment.tsx",["126","127","128","129","130","131","132","133"],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\diagnostic\\Diagnostic.tsx",["134","135","136","137","138"],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\config\\Colors.ts",[],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\components\\table\\TableIcons.tsx",[],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\redux\\reducers\\authReducers.ts",[],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\screens\\Pills\\Pills.tsx",["139","140","141","142","143"],"C:\\Users\\User\\IdeaProjects\\Pacient\\client\\src\\services\\api.ts",["144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":24,"nodeType":"151","messageId":"152","endLine":1,"endColumn":32},{"ruleId":"149","severity":1,"message":"153","line":16,"column":10,"nodeType":"151","messageId":"152","endLine":16,"endColumn":16},{"ruleId":"149","severity":1,"message":"154","line":20,"column":22,"nodeType":"151","messageId":"152","endLine":20,"endColumn":33},{"ruleId":"145","replacedBy":"155"},{"ruleId":"147","replacedBy":"156"},{"ruleId":"149","severity":1,"message":"157","line":5,"column":9,"nodeType":"151","messageId":"152","endLine":5,"endColumn":27},{"ruleId":"149","severity":1,"message":"158","line":23,"column":12,"nodeType":"151","messageId":"152","endLine":23,"endColumn":20},{"ruleId":"149","severity":1,"message":"159","line":24,"column":12,"nodeType":"151","messageId":"152","endLine":24,"endColumn":20},{"ruleId":"149","severity":1,"message":"160","line":27,"column":27,"nodeType":"151","messageId":"152","endLine":27,"endColumn":43},{"ruleId":"149","severity":1,"message":"161","line":31,"column":12,"nodeType":"151","messageId":"152","endLine":31,"endColumn":20},{"ruleId":"149","severity":1,"message":"162","line":31,"column":22,"nodeType":"151","messageId":"152","endLine":31,"endColumn":33},{"ruleId":"149","severity":1,"message":"163","line":32,"column":28,"nodeType":"151","messageId":"152","endLine":32,"endColumn":45},{"ruleId":"164","severity":1,"message":"165","line":69,"column":72,"nodeType":"166","messageId":"167","endLine":69,"endColumn":74},{"ruleId":"164","severity":1,"message":"165","line":83,"column":55,"nodeType":"166","messageId":"167","endLine":83,"endColumn":57},{"ruleId":"164","severity":1,"message":"165","line":97,"column":68,"nodeType":"166","messageId":"167","endLine":97,"endColumn":70},{"ruleId":"145","replacedBy":"168"},{"ruleId":"147","replacedBy":"169"},{"ruleId":"149","severity":1,"message":"170","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":14},{"ruleId":"149","severity":1,"message":"158","line":25,"column":12,"nodeType":"151","messageId":"152","endLine":25,"endColumn":20},{"ruleId":"149","severity":1,"message":"159","line":26,"column":12,"nodeType":"151","messageId":"152","endLine":26,"endColumn":20},{"ruleId":"149","severity":1,"message":"171","line":104,"column":31,"nodeType":"151","messageId":"152","endLine":104,"endColumn":39},{"ruleId":"149","severity":1,"message":"171","line":166,"column":31,"nodeType":"151","messageId":"152","endLine":166,"endColumn":39},{"ruleId":"149","severity":1,"message":"171","line":199,"column":19,"nodeType":"151","messageId":"152","endLine":199,"endColumn":27},{"ruleId":"149","severity":1,"message":"158","line":24,"column":12,"nodeType":"151","messageId":"152","endLine":24,"endColumn":20},{"ruleId":"149","severity":1,"message":"159","line":25,"column":12,"nodeType":"151","messageId":"152","endLine":25,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":52,"column":68,"nodeType":"166","messageId":"167","endLine":52,"endColumn":70},{"ruleId":"149","severity":1,"message":"171","line":103,"column":23,"nodeType":"151","messageId":"152","endLine":103,"endColumn":31},{"ruleId":"149","severity":1,"message":"171","line":148,"column":23,"nodeType":"151","messageId":"152","endLine":148,"endColumn":31},{"ruleId":"149","severity":1,"message":"171","line":176,"column":19,"nodeType":"151","messageId":"152","endLine":176,"endColumn":27},{"ruleId":"149","severity":1,"message":"158","line":35,"column":12,"nodeType":"151","messageId":"152","endLine":35,"endColumn":20},{"ruleId":"149","severity":1,"message":"159","line":36,"column":12,"nodeType":"151","messageId":"152","endLine":36,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":75,"column":72,"nodeType":"166","messageId":"167","endLine":75,"endColumn":74},{"ruleId":"164","severity":1,"message":"165","line":89,"column":72,"nodeType":"166","messageId":"167","endLine":89,"endColumn":74},{"ruleId":"164","severity":1,"message":"165","line":103,"column":68,"nodeType":"166","messageId":"167","endLine":103,"endColumn":70},{"ruleId":"149","severity":1,"message":"171","line":142,"column":23,"nodeType":"151","messageId":"152","endLine":142,"endColumn":31},{"ruleId":"149","severity":1,"message":"171","line":190,"column":23,"nodeType":"151","messageId":"152","endLine":190,"endColumn":31},{"ruleId":"149","severity":1,"message":"171","line":217,"column":19,"nodeType":"151","messageId":"152","endLine":217,"endColumn":27},{"ruleId":"149","severity":1,"message":"158","line":22,"column":12,"nodeType":"151","messageId":"152","endLine":22,"endColumn":20},{"ruleId":"149","severity":1,"message":"159","line":23,"column":12,"nodeType":"151","messageId":"152","endLine":23,"endColumn":20},{"ruleId":"149","severity":1,"message":"171","line":61,"column":23,"nodeType":"151","messageId":"152","endLine":61,"endColumn":31},{"ruleId":"149","severity":1,"message":"171","line":95,"column":23,"nodeType":"151","messageId":"152","endLine":95,"endColumn":31},{"ruleId":"149","severity":1,"message":"171","line":121,"column":19,"nodeType":"151","messageId":"152","endLine":121,"endColumn":27},{"ruleId":"149","severity":1,"message":"158","line":20,"column":12,"nodeType":"151","messageId":"152","endLine":20,"endColumn":20},{"ruleId":"149","severity":1,"message":"159","line":21,"column":12,"nodeType":"151","messageId":"152","endLine":21,"endColumn":20},{"ruleId":"149","severity":1,"message":"171","line":54,"column":23,"nodeType":"151","messageId":"152","endLine":54,"endColumn":31},{"ruleId":"149","severity":1,"message":"171","line":88,"column":23,"nodeType":"151","messageId":"152","endLine":88,"endColumn":31},{"ruleId":"149","severity":1,"message":"171","line":113,"column":19,"nodeType":"151","messageId":"152","endLine":113,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":33,"column":1,"nodeType":"174","endLine":63,"endColumn":2},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Bounce' is defined but never used.","'useSelector' is defined but never used.",["175"],["176"],"'TreatmentInterface' is defined but never used.","'nextPage' is assigned a value but never used.","'lastPage' is assigned a value but never used.","'setErrorMessages' is assigned a value but never used.","'iserror2' is assigned a value but never used.","'setIserror2' is assigned a value but never used.","'setErrorMessages2' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["175"],["176"],"'fade' is defined but never used.","'response' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]